Para gerar a build do projeto
- npm run build

Para usar o Prettier para formatar o projeto
- npm run format

Para usar o Eslint para verificar
- npm run lint

/// Git convenções ///

    feat: Adição de uma nova funcionalidade.

        Exemplo: git commit -m "feat: adiciona autenticação de usuário"

    fix: Correção de um bug.

        Exemplo: git commit -m "fix: corrige erro de autenticação"

    docs: Mudanças na documentação.

        Exemplo: git commit -m "docs: atualiza README com instruções de setup"

    style: Mudanças que não afetam o significado do código (espaços em branco, formatação, ponto e vírgula faltando, etc.).

        Exemplo: git commit -m "style: ajusta formatação do código"

    refactor: Refatoração do código sem mudar sua funcionalidade.

        Exemplo: git commit -m "refactor: melhora performance da função de login"

    perf: Mudanças que melhoram a performance.

        Exemplo: git commit -m "perf: otimiza carregamento de imagens"

    test: Adição ou correção de testes.

        Exemplo: git commit -m "test: adiciona testes unitários para componente de login"

    chore: Atualizações de tarefas de build ou ferramentas auxiliares.

        Exemplo: git commit -m "chore: atualiza dependências no package.json"

    revert: Reversão de commits anteriores.

        Exemplo: git commit -m "revert: desfaz commit x"

/// Media queryes do taiwind ///

Breakpoints Padrão de Tailwind CSS
sm: Telas pequenas e acima (640px)

md: Telas médias e acima (768px)

lg: Telas grandes e acima (1024px)

xl: Telas extra grandes e acima (1280px)

2xl: Telas de 2x extra grandes e acima (1536px)